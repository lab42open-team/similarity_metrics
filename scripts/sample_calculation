# Head file of choice
head myfile.tsv

# Find pattern in files and count occurrences 
find . -type f -name "*SSU*" | wc -l # * are for "anything" before and after SSU

# Examples of use
find . -type f -name "*v5*" | wc -l
find . -type f -name "*ERP*" | wc -l

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Iterate over each file of specific version in parent directory (please adjust version to the one of interest) + create TOTAL sample counts files
#!/bin/bash
# Set the input directory
directory="/ccmri/similarity_metrics/data/taxa_counts_output/v5.0/SSU_v5.0" # adjust v No
# Set the output file
output_file="/ccmri/similarity_metrics/data/SampleCounts/v5.0_SSU_sample_counts.tsv" # adjust v No
# Initialize variable to get total sum of samples 
total_samples=0
# Iterate over each file in the directory
for file in "$directory"/*.tsv; do
    # Extract filename without extension
    filename=$(basename "$file" .tsv)
    # Count the number of columns (samples) in the file, excluding the first column
    column_count=$(head -n 1 "$file" | awk -F'\t' '{print NF-1}')
    # Increment total_samples by the current file's column count
    ((total_samples += column_count))
    # Write the filename and the number of samples to the output file
    echo -e "$filename\t$column_count" >> "$output_file"
done
# Set final output
f_output="/ccmri/similarity_metrics/data/SampleCounts/total_sample_counts.tsv"
# Append total sum of samples to final output
echo -e "v5.0_SSU_samples\t$total_samples" >> "$f_output" # adjust v No

### TOTAL SAMPLE COUNTS
#!/bin/bash

# Set input directory 
directory="/ccmri/similarity_metrics/data/SampleCounts"
output_file="/ccmri/similarity_metrics/data/SampleCounts/total_sample_counts.tsv"

# Initialize an associative array to store total counts for each version 
declare -A total_counts 

# Loop through each tsv file in the directory 
for file in "$directory"v*_sample_counts.tsv; do
    # Extract the version from file name 
    version=$(basename "$file" | sed 's/_sample_counts.tsv//')
    # Initialize total count for the current version 
    total_count=0
    # Read count from each line in the tsv file and sum them up 
    while IFS=$'\t' read -r _ count; do 
        ((total_count += count))
    done < "$file"

    # Add total count to the corresponding version 
    ((total_counts["$version"] += total_count))
done 

# Write total counts per version to output file 
echo -e "Version\tSample Counts" > "$output_file"
# Sort versions 
sorted_versions=($(printf '%s\n' "${!total_counts[@]}" | sort -V))
for version in "${sorted_versions[@]}"; do
    # Write version and total count to output file 
    echo -e "$version\t${total_counts[$version]}" >> "$output_file"
done 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### Use the following commands to count total samples in each version
#! bin/bash
# Set input directory
directory="/ccmri/similarity_metrics/data/SampleCounts"
# Set temporary file
temp_file="/ccmri/similarity_metrics/data/temp.tsv"
# Iterate over each file contained in parent directory
for file in "$directory"/*.tsv; do
    # Extract version from filename 
    version=$(basename "$file" _sample_counts.tsv | cut -dv -f2)
    # Initialize total sample count
    total_sample_count=0
    # Iterate over each line in the input file
    while IFS=$'\t' read -r filename count; do
        # Extract count from line and add it to the total sample count 
        total_sample_count=$((total_sample_count + count))
    done < "$file"
    echo -e "$version\t$total_sample_count" >> "$temp_file"
done
# Create header for .tsv file
echo -e "Version\tSamples" > /ccmri/similarity_metrics/data/sample_counts.tsv
# Append version and sample counts
cat "$temp_file" >> /ccmri/similarity_metrics/data/sample_counts.tsv
# Remove temporary file  
rm "$temp_file"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### Use the following commands to count total files per version (taxonomy abundances files) 
#! bin/bash
# Set input directory
directory="/ccmri/similarity_metrics/data/SampleCounts"
# Set output directory
temp_file="/ccmri/similarity_metrics/data/temp.tsv"
# Iterate over each file contained in parent directory
for file in "$directory"/*.tsv; do
    # Extract version from filename 
    version=$(basename "$file" .tsv)
    # Remove everything after first underscore
    version=${version%%_*}
    # Count number of lines in each file
    line_count=$(wc -l < "$file")
    # Write version and line count to output
    echo -e "$version\t$line_count" >> "$temp_file"
done 
# Create header for .tsv file 
echo -e "Version\tCount" > /ccmri/similarity_metrics/data/version_counts.tsv
# Append counts from temporary to result file
cat "$temp_file" >> /ccmri/similarity_metrics/data/version_counts.tsv
# Remove temporary file 
rm "$temp_file"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### Use the following comands to calculate total number of studies per version
#!/bin/bash
# Set input directory 
directory="/ccmri/similarity_metrics/data/taxa_counts_output"
# Set output directory
output_file="/ccmri/similarity_metrics/data/studies_per_version_counts.tsv"
echo -e "Version\tStudies" >> "$output_file"
# Iterate over each subdirectory
for subdir in "$directory"/*; do
    # Check if current item exists in directory
    if [ -d "$subdir" ]; then
        # Get version from subdir name 
        version=$(basename "$subdir")
        # Count number of files included
        file_count=$(find "$subdir" -maxdepth 1 -type f | wc -l)
        # Write version & file count to output
        echo -e "$version\t$file_count" >> "$output_file"

        # Iterate over each subsubdir of subdir 
        for subsubdir in "$subdir"/*/; do 
            # Check if current subitem exists
            if [ -d "$subsubdir" ]; then 
                # Get subversion from subsubdir name 
                subversion=$(basename "$subsubdir")
                subfile_count=$(find "$subsubdir" -maxdepth 1 -type f | wc -l)
                # Write version & file count to output
                echo -e "$version/$subversion\t$subfile_count" >> "$output_file"
            fi
        done
    fi
done
