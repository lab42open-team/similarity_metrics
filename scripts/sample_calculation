# Head file of choice
head myfile.tsv

# Find pattern in files and count occurrences 
find . -type f -name "*SSU*" | wc -l # * are for "anything" before and after SSU

# Examples of use
find . -type f -name "*v5*" | wc -l
find . -type f -name "*ERP*" | wc -l

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
""" 
OLD VERSION - DO NOT USE 
### Use this script to calculate samples per MGYS
# Iterate over all files contained in parent directory (ALL versions included)
#!/bin/bash
# Set input directory
directory="/ccmri/similarity_metrics/data/taxa_counts_output"
output_file="/ccmri/similarity_metrics/data/sample_counts.tsv"
echo -e "Study\tSamples" > "$output_file"

# Iterate over each subdirectory
for subdir in "$directory"/*; do
    # Check if current item exists in directory
    if [ -d "$subdir" ]; then
        # Iterate over each subsubdir of subdir in case it exists (eg. subdirs v4.0, 4.1, 5.0 > SSU-LSU subfolders)
        for subsubdir in "$subdir"/*/; do
            if [ -d "$subsubdir" ]; then
                # Iterate over each file in directory 
                for file in "$subsubdir"/*.tsv; do  
                    if [ -f "$file" ]; then 
                        # Check if file is empty
                        if [ ! -s "$file" ]; then 
                            echo "Warning: $file is empty. Skipping..."
                            continue
                        fi
                        # Retrieve column count of file 
                        column_count=$(head -n 1 "$file" | awk -F'\t' '{print NF}');
                        # Check if column count is valid
                        if [ "$column_count" -lt 1 ]; then 
                            echo "Warning: $file does not have the expected format. skipping..."
                            continue
                        fi
                        # Extract filename without extension
                        filename=$(basename "$file" .tsv); 
                        # Write filename & count to output file
                        echo -e "$filename\t$((column_count -1))" >> "$output_file" 
                    fi
                done
            fi
        done
    fi
done
"""

# Iterate over each file of specific version in parent directory (please adjust version to the one of interest)
#!/bin/bash
# Set the input directory
directory="/ccmri/similarity_metrics/data/taxa_counts_output"
# Set the output file
output_file="/ccmri/similarity_metrics/data/SampleCounts/v1_sample_counts.tsv" # adjust v No
# Iterate over each file in the directory
for file in "$directory"/*.tsv; do
    # Extract filename without extension
    filename=$(basename "$file" .tsv)
    # Check if the filename contains "v5"
    if [[ "$filename" == *"v1"* ]]; then # adjust v No
        # Count the number of columns (samples) in the file, excluding the first column
        column_count=$(head -n 1 "$file" | awk -F'\t' '{print NF-1}')
        # Write the filename and the number of samples to the output file
        echo -e "$filename\t$column_count" >> "$output_file"
    fi
done

### TOTAL SAMPLE COUNTS
#!/bin/bash

# Set input directory containing the TSV files
directory="/ccmri/similarity_metrics/data/SampleCounts/"

# Output file
output_file="/ccmri/similarity_metrics/data/SampleCounts/Total_sample_counts.tsv"

# Initialize an associative array to store the total counts for each list
declare -A total_counts

# Loop through each TSV file in the directory
for file in "$directory"/*.txt; do
    # Get the name of the list from the file name
    list_name=$(basename "$file" .txt)
    
    # Initialize total count for the current list
    total_count=0
    
    # Read the count from each line in the TSV file and sum them up
    while IFS=$'\t' read -r _ count; do
        ((total_count += count))
    done < "$file"
    
    # Store the total count for the current list
    total_counts["$list_name"]=$total_count
done

# Write total counts for each list to the output file
echo -e "List\tTotal Count" > "$output_file"
for list_name in "${!total_counts[@]}"; do
    echo -e "$list_name\t${total_counts[$list_name]}" >> "$output_file"
done

echo "Total counts for each list written to $output_file"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### Use the following commands to count total samples in each version
#! bin/bash
# Set input directory
directory="/ccmri/similarity_metrics/data/SampleCounts"
# Set temporary file
temp_file="/ccmri/similarity_metrics/data/temp.tsv"
# Iterate over each file contained in parent directory
for file in "$directory"/*.tsv; do
    # Extract version from filename 
    version=$(basename "$file" _sample_counts.tsv | cut -dv -f2)
    # Initialize total sample count
    total_sample_count=0
    # Iterate over each line in the input file
    while IFS=$'\t' read -r filename count; do
        # Extract count from line and add it to the total sample count 
        total_sample_count=$((total_sample_count + count))
    done < "$file"
    echo -e "$version\t$total_sample_count" >> "$temp_file"
done
# Create header for .tsv file
echo -e "Version\tSamples" > /ccmri/similarity_metrics/data/sample_counts.tsv
# Append version and sample counts
cat "$temp_file" >> /ccmri/similarity_metrics/data/sample_counts.tsv
# Remove temporary file  
rm "$temp_file"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### Use the following commands to count total files per version (taxonomy abundances files) 
#! bin/bash
# Set input directory
directory="/ccmri/similarity_metrics/data/SampleCounts"
# Set output directory
temp_file="/ccmri/similarity_metrics/data/temp.tsv"
# Iterate over each file contained in parent directory
for file in "$directory"/*.tsv; do
    # Extract version from filename 
    version=$(basename "$file" .tsv)
    # Remove everything after first underscore
    version=${version%%_*}
    # Count number of lines in each file
    line_count=$(wc -l < "$file")
    # Write version and line count to output
    echo -e "$version\t$line_count" >> "$temp_file"
done 
# Create header for .tsv file 
echo -e "Version\tCount" > /ccmri/similarity_metrics/data/version_counts.tsv
# Append counts from temporary to result file
cat "$temp_file" >> /ccmri/similarity_metrics/data/version_counts.tsv
# Remove temporary file 
rm "$temp_file"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

### Use the following comands to calculate total number of studies per version
#!/bin/bash
# Set input directory 
directory="/ccmri/similarity_metrics/data/taxa_counts_output"
# Set output directory
output_file="/ccmri/similarity_metrics/data/studies_per_version_counts.tsv"
echo -e "Version\tStudies" >> "$output_file"
# Iterate over each subdirectory
for subdir in "$directory"/*; do
    # Check if current item exists in directory
    if [ -d "$subdir" ]; then
        # Get version from subdir name 
        version=$(basename "$subdir")
        # Count number of files included
        file_count=$(find "$subdir" -maxdepth 1 -type f | wc -l)
        # Write version & file count to output
        echo -e "$version\t$file_count" >> "$output_file"

        # Iterate over each subsubdir of subdir 
        for subsubdir in "$subdir"/*/; do 
            # Check if current subitem exists
            if [ -d "$subsubdir" ]; then 
                # Get subversion from subsubdir name 
                subversion=$(basename "$subsubdir")
                subfile_count=$(find "$subsubdir" -maxdepth 1 -type f | wc -l)
                # Write version & file count to output
                echo -e "$version/$subversion\t$subfile_count" >> "$output_file"
            fi
        done
    fi
done
